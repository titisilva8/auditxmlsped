      class function GetValorTagXml(TagXml, CamposTagXml: String;I:Integer): String;

class function TRegrasController.GetValorTagXml(TagXml, CamposTagXml: String;I:Integer): String;
var teste:string;
begin

  if TagXml = 'Ide' then
  begin
    case AnsiIndexStr(CamposTagXml,['serie','dEmi'])  of
    0:Result:=IntToStr(DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].Nfe.Ide.serie);
    1:Result:=DateTimeToStr(DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].Nfe.Ide.dEmi);
    end;
  end;


  if TagXml = 'Prod' then
  begin
    case AnsiIndexStr(CamposTagXml,['Ncm','Cfop'])  of
    0:Result:=DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].Nfe.Det.Items[i].Prod.Ncm;
    1:Result:=DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].Nfe.Det.Items[i].Prod.Cfop;
    end;
  end;


   if TagXml = 'Total' then
  begin
    case AnsiIndexStr(CamposTagXml,['vICMS'])  of
    0:Result:=FloattoStr(DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].Nfe.Total.ICMSTot.vICMS);
    end;
  end;

end;


{class procedure TRegrasController.VerificaDivergencias_Xml_X_Sped(TagXml,CampoXml,ValorXml,TabelaSped,CampoSped,ValorEsperadoSped,Historico:String;IndiceMestreSped,IndiceDetalheDetalheSped_Xml:Integer);
var ValorCampoXmlRetornado,ValorCampoSpedRetornado:Variant;
begin
  ValorCampoXmlRetornado:=GetValorField(TagXml,CampoXml,IndiceDetalheDetalheSped_Xml);
  if ValorXml<>'' then
  if VarToStr(ValorCampoXmlRetornado) = ValorXml then
  begin
    ValorCampoSpedRetornado:=GetValorFieldSped(TabelaSped,CampoSped,IndiceMestreSped,IndiceDetalheDetalheSped_Xml);
    if ValorEsperadoSped <> VarToStr(ValorCampoSpedRetornado) then
    RegistraErrosAdvertencias(DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].NFe.Ide.nNF.ToString,
    DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].NFe.procNFe.chNFe,VarToStr(ValorCampoXmlRetornado),
    VarToStr(ValorEsperadoSped),VarToStr(ValorCampoSpedRetornado),'Teste 1');
  end;

  if ValorXml = '' then
  begin
    ValorCampoSpedRetornado:=GetValorFieldSped(TabelaSped,CampoSped,IndiceMestreSped,IndiceDetalheDetalheSped_Xml);
    if ValorCampoXmlRetornado <> ValorCampoSpedRetornado then
    TRegrasController.RegistraErrosAdvertencias(DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].NFe.Ide.nNF.ToString,
    DataModuleRegras.AcbrNfe.NotasFiscais.Items[0].NFe.procNFe.chNFe,VarToStr(ValorCampoXmlRetornado),
    VarToStr(ValorCampoXmlRetornado),VarToStr(ValorCampoSpedRetornado),'Teste2');
  end;
end;}




class function TRegrasController.GetValorCampoSped(TabelaSped, CampoSped: String;I: Integer): String;
begin
  if TabelaSped = 'C100' then
  begin
    case AnsiIndexStr(CampoSped,['SER','DT_DOC'])  of
    0:Result:=DataModuleRegras.AcbrSpedFiscal1.Bloco_C.RegistroC001.RegistroC100.Items[I].SER;
    1:Result:=DateTimeToStr(DataModuleRegras.AcbrSpedFiscal1.Bloco_C.RegistroC001.RegistroC100.Items[I].DT_DOC);
    end;
  end;


  if TabelaSped = 'C170' then
  begin
    case AnsiIndexStr(CampoSped,['CFOP'])  of
    0:Result:=DataModuleRegras.AcbrSpedFiscal1.Bloco_C.RegistroC001.RegistroC100.Items[I].RegistroC170.Items[I].CFOP;
    //1:Result:=AcbrNfe.NotasFiscais.Items[0].Nfe.Det.Items[i].Prod.Cfop;
    end;
  end;


  //if TagXml = 'Total' then
  //begin
    //case AnsiIndexStr(CamposTagXml,['vICMS'])  of
    //0:Result:=FloattoStr(AcbrNfe.NotasFiscais.Items[0].Nfe.Total.ICMSTot.vICMS);
    //end;
  //end;
end;